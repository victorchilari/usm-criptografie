{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/popup.css?283c","webpack:///./src/App.vue","webpack:///./ciphers/content_info.js","webpack:///./ciphers/globalCFG.js","webpack:///./ciphers/transposition.js","webpack:///./ciphers/monoalphabeticSubstitution.js","webpack:///./ciphers/polialphabeticSubstitution.js","webpack:///./src/App.vue?dfb6","webpack:///./src/main.js","webpack:///./src/main.css?1029","webpack:///./src/App.vue?8ce9"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","for","id","selectedCipher","type","selectedCCS","popupOpenInfo","notRealised","includes","popupOpenUse","closePopupAnyway","objectToShow","description","toEncrypt","secretKey","cipherKey","toDecrypt","encrypt","decrypt","DESCRIPTIONS","title","EXCLUDED_CHAR","ALPHABET","toUpperCase","split","RARE_CHAR","WIDTH","myszkowski","text","str_arr","clear_str_arr","filter","char","arr","stringLength","keyWidth","position","chr","encryptedArr","obj","keyIsRepeated","curentKey","undefined","sortedKeys","keys","sort","chrsForThisKey","encryptedStr","join","console","log","myszkowskiDecrypt","keyWord","rows","uniqueSortedKeys","item","pos","indexOf","undefinedCells","howMuchOfMe","e","haveUndefined","howBigIam","forEach","arrOfKey","row","ascii","map","charCodeAt","asciiFromZero","k","correctPostitio","correctSortedArr","index","decryptedArr","decryptedStr","nihilist","wasSwitchedToAlphabet","oneDarray","concat","firstValueEncryptedArr","toFind","valuesChipherKey","secondValueEncryptedArr","number","nihilistDecrypt","array","firstValueDecryptedArr","Number","parseInt","playfair","arrOfCouple","char1","char2","valueEncryptedArr","toFind0","toFind1","xy0","xy1","inSameColumn","inSameRow","recalY0","recalY1","newChar0","newChar1","recalX0","recalX1","beautifyArr","playfairDecrypt","ciphers","ccp","ccsm","ccsp","cmcpss","Array","descriptionToShow","excludedChar","methods","this","popupActive","document","querySelectorAll","classList","remove","showP","querySelector","add","popupClose","render","createApp","App","mount"],"mappings":"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","file":"js/app.eb0e1955.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/usm-criptografie/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!./popup.css?vue&type=style&index=2&lang=css\"","<template>\r\n  <div class=\"container\">\r\n    <div class=\"title\">Sisteme de criptare clasice</div>\r\n  </div>\r\n  <div class=\"container\">\r\n    <div class=\"area\">\r\n      <div class=\"area-title\">Precizati tipul sistemului de criptare</div>\r\n      <div class=\"area-content radio\">\r\n        <input\r\n          v-model=\"selectedCipher\"\r\n          type=\"radio\"\r\n          name=\"sdc\"\r\n          id=\"ccp\"\r\n          value=\"ccp\"\r\n        />\r\n        <label for=\"ccp\">Cifru cu permutare</label>\r\n        <input\r\n          v-model=\"selectedCipher\"\r\n          type=\"radio\"\r\n          name=\"sdc\"\r\n          id=\"ccs\"\r\n          value=\"ccs\"\r\n        />\r\n        <label for=\"ccs\">Cifru cu substitutie</label>\r\n        <input\r\n          v-model=\"selectedCipher\"\r\n          type=\"radio\"\r\n          name=\"sdc\"\r\n          id=\"cmcpss\"\r\n          value=\"cmcpss\"\r\n        />\r\n        <label for=\"cmcpss\">Cifru mixt cu permutare si substitutie</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container\">\r\n    <select\r\n      v-model=\"selectedCCS\"\r\n      v-if=\"selectedCipher == 'ccs'\"\r\n      name=\"cifru_cu_substitutie\"\r\n      id=\"cifru_cu_substitutie\"\r\n    >\r\n      <option value=\"ccsm\">Cifru cu substitutie monoalfabetica</option>\r\n      <option value=\"ccsp\">Cifru cu substitutie polialfabetica</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"container\">\r\n    <div class=\"area\">\r\n      <div class=\"area-title\">Prezentarea cifrului</div>\r\n      <div class=\"area-content\">\r\n        <span class=\"area-content__title\" id=\"ChipherTitle\">\r\n          {{\r\n            selectedCipher == \"ccs\"\r\n              ? ciphers[selectedCCS][0]\r\n              : ciphers[selectedCipher][0]\r\n          }}\r\n        </span>\r\n        <button @click=\"popupOpenInfo\" class=\"popup-link\">\r\n          Descrierea cifrului\r\n        </button>\r\n        <button\r\n          v-if=\"!notRealised.includes(selectedCipher)\"\r\n          @click=\"popupOpenUse\"\r\n          class=\"popup-link\"\r\n        >\r\n          Utilizarea cifrului\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container\"></div>\r\n  <div class=\"popup\" id=\"popupInfo\">\r\n    <div class=\"popop__body\">\r\n      <div class=\"popup__content\">\r\n        <a @click=\"closePopupAnyway\" class=\"popup__close\">x</a>\r\n        <div class=\"popup__title\">\r\n          {{\r\n            selectedCipher == \"ccs\"\r\n              ? ciphers[selectedCCS][0]\r\n              : ciphers[selectedCipher][0]\r\n          }}, descriere\r\n        </div>\r\n        <div class=\"popup__text\" v-html=\"objectToShow?.description\"></div>\r\n        <button\r\n          v-if=\"!notRealised.includes(selectedCipher)\"\r\n          @click=\"popupOpenUse\"\r\n          class=\"popup-link\"\r\n        >\r\n          Utilizarea cifrului\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"popup\" id=\"popupUse\">\r\n    <div class=\"popop__body\">\r\n      <div class=\"popup__content\">\r\n        <a @click=\"closePopupAnyway\" class=\"popup__close\">x</a>\r\n        <div class=\"popup__title\">\r\n          {{\r\n            selectedCipher == \"ccs\"\r\n              ? ciphers[selectedCCS][0]\r\n              : ciphers[selectedCipher][0]\r\n          }}, utilizare\r\n        </div>\r\n        <div class=\"popup__text\">\r\n          <textarea v-model=\"toEncrypt\" type=\"text\" />\r\n          <textarea v-model=\"secretKey\" type=\"text\" />\r\n          <textarea v-model=\"cipherKey\" type=\"text\" />\r\n          <textarea v-model=\"toDecrypt\" type=\"text\" />\r\n          <br />\r\n          <button @click=\"encrypt()\">Encrypt</button>\r\n          <button @click=\"decrypt()\">\r\n            Decrypt\r\n          </button>\r\n        </div>\r\n        <button @click=\"popupOpenInfo\" class=\"popup-link\">\r\n          Descrierea cifrului\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { DESCRIPTIONS } from \"../ciphers/content_info\";\r\nimport { myszkowski, myszkowskiDecrypt } from \"../ciphers/transposition.js\";\r\nimport {\r\n  nihilist,\r\n  nihilistDecrypt\r\n} from \"../ciphers/monoalphabeticSubstitution.js\";\r\nimport {\r\n  playfair,\r\n  playfairDecrypt\r\n} from \"../ciphers/polialphabeticSubstitution.js\";\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      ciphers: {\r\n        ccp: [\"Cifrul cu transpozitie Myszkowski\"],\r\n        ccsm: [\"Cifrul nihilist\"],\r\n        ccsp: [\"Cifrul Playfair\"],\r\n        cmcpss: [\"Nicodemus\"]\r\n      },\r\n      DESCRIPTIONS: new Array(...DESCRIPTIONS),\r\n      objectToShow: {},\r\n      descriptionToShow: \"\",\r\n      notRealised: [\"cmcpss\"],\r\n      selectedCipher: \"cmcpss\",\r\n      selectedCCS: \"ccsm\",\r\n      toEncrypt: \"WE ARE DISCOVERED. FLEE AT ONCE\",\r\n      secretKey: \"TOMATO\",\r\n      cipherKey: null,\r\n      toDecrypt: null,\r\n      excludedChar: [\" \", \",\", \".\"]\r\n    };\r\n  },\r\n  methods: {\r\n    encrypt() {\r\n      if (this.selectedCipher !== \"ccs\") {\r\n        switch (this.selectedCipher) {\r\n          case \"ccp\":\r\n            this.toDecrypt = myszkowski(this.toEncrypt, this.secretKey);\r\n            break;\r\n          case \"cmcpss\":\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        switch (this.selectedCCS) {\r\n          case \"ccsm\":\r\n            this.toDecrypt = nihilist(this.toEncrypt, this.secretKey);\r\n            break;\r\n          case \"ccsp\":\r\n            this.toDecrypt = playfair(this.toEncrypt, this.secretKey);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    },\r\n    decrypt() {\r\n      if (this.selectedCipher !== \"ccs\") {\r\n        switch (this.selectedCipher) {\r\n          case \"ccp\":\r\n            this.toEncrypt = myszkowskiDecrypt(this.toDecrypt, this.secretKey);\r\n            break;\r\n          case \"cmcpss\":\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        switch (this.selectedCCS) {\r\n          case \"ccsm\":\r\n            this.toEncrypt = nihilistDecrypt(this.toDecrypt, this.secretKey);\r\n            break;\r\n          case \"ccsp\":\r\n            this.toEncrypt = playfairDecrypt(this.toDecrypt, this.secretKey);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    },\r\n    closePopupAnyway() {\r\n      const popupActive = document.querySelectorAll(\".open\")[0];\r\n      if (popupActive) popupActive.classList.remove(\"open\");\r\n    },\r\n    popupOpenInfo() {\r\n      this.closePopupAnyway();\r\n      const showP = document.querySelector(\"#popupInfo\");\r\n      showP.classList.add(\"open\");\r\n      this.objectToShow =\r\n        this.selectedCipher == \"ccs\"\r\n          ? this.DESCRIPTIONS.filter(e => e.key == this.selectedCCS)[0]\r\n          : this.DESCRIPTIONS.filter(e => e.key == this.selectedCipher)[0];\r\n    },\r\n    popupOpenUse() {\r\n      this.closePopupAnyway();\r\n      const showP = document.querySelector(\"#popupUse\");\r\n      showP.classList.add(\"open\");\r\n    },\r\n    popupClose(popupActive) {\r\n      popupActive.classList.remove(\"open\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  /* font-family: Avenir, Helvetica, Arial, sans-serif; */\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n<style src=\"./main.css\"></style>\r\n<style src=\"./popup.css\"></style>\r\n","export const DESCRIPTIONS = [\r\n  {\r\n    type: \"\",\r\n    title: \"Myszkowski transposition\",\r\n    key: \"ccp\",\r\n    description: `<p>  Victor Théodore Myszkowski, in 1902, propune o varianta de criptare a tipului de sifruri cu transpunere pe coloane. De obicei, aparițiile ulterioare ale unei litere de cuvinte cheie sunt tratate ca și cum următoarea literă în ordine alfabetică, de ex., cuvântul cheie TOMATO produce un șir numeric de „532164”.</p> <p>  În transpunerea lui Myszkowski, literele recurente ale cuvintelor cheie sunt numerotate în mod identic, TOMATO producând un șir de taste „432143”.</p>\r\n<pre>4 3 2 1 4 3\r\nW E A R E D\r\nI S C O V E\r\nR E D F L E\r\nE A T O N C\r\nE          \r\n</pre>\r\n<p>  Coloanele cu text simplu cu numere unice sunt transcrise în jos; cele cu numere recurente sunt transcrise de la stânga la dreapta:</p>\r\n<pre>ROFOA CDTED SEEEA CWEIV RLENE\r\n</pre>\r\n`\r\n  },\r\n  {\r\n    type: \"\",\r\n    title: \"Nihilist cipher\",\r\n    key: \"ccsm\",\r\n    description: `<p>Se construiește un pătrat Polybius folosind un alfabet mixt. Acesta este utilizat pentru a converti atât textul clar, cât și un cuvânt cheie într-o serie de numere din două cifre. Aceste numere sunt apoi adăugate în mod normal pentru a obține textul cifrat, cu numerele cheie repetate după cum este necesar.</p>\r\n<h3>Exemplu:</h3>\r\n<p>Consider the Polybius square created using the keyword ZEBRAS:</p>\r\n<table>\r\n<tbody><tr>\r\n<td>&nbsp;</td>\r\n<td><b>1</b></td>\r\n<td><b>2</b></td>\r\n<td><b>3</b></td>\r\n<td><b>4</b></td>\r\n<td><b>5</b>\r\n</td></tr>\r\n<tr>\r\n<td><b>1</b></td>\r\n<td>Z</td>\r\n<td>E</td>\r\n<td>B</td>\r\n<td>R</td>\r\n<td>A\r\n</td></tr>\r\n<tr>\r\n<td><b>2</b></td>\r\n<td>S</td>\r\n<td>C</td>\r\n<td>D</td>\r\n<td>F</td>\r\n<td>G\r\n</td></tr>\r\n<tr>\r\n<td><b>3</b></td>\r\n<td>H</td>\r\n<td>I</td>\r\n<td>K</td>\r\n<td>L</td>\r\n<td>M\r\n</td></tr>\r\n<tr>\r\n<td><b>4</b></td>\r\n<td>N</td>\r\n<td>O</td>\r\n<td>P</td>\r\n<td>Q</td>\r\n<td>T\r\n</td></tr>\r\n<tr>\r\n<td><b>5</b></td>\r\n<td>U</td>\r\n<td>V</td>\r\n<td>W</td>\r\n<td>X</td>\r\n<td>Y\r\n</td></tr></tbody></table>\r\n<p>cu un text clar al „DYNAMITE WINTER PALACE” și o cheie a RUSSIAN. Aceasta se extinde la:</p>\r\n<pre>PT:  23  55   41  15  35  32  45  12  53   32  41  45  12  14  43  15  34  15  22  12\r\nKEY: 14  51   21  21  32  15  41  14  51   21  21  32  15  41  14  51  21  21  32  15\r\nCT:  37  106  62  36  67  47  86  26  104  53  62  77  27  55  57  66  55  36  54  27\r\n</pre>`\r\n  },\r\n  {\r\n    type: \"\",\r\n    title: \"Playfair cipher\",\r\n    key: \"ccsp\",\r\n    description: `<p>  Spre deosebire de cifrurile cu substituție monoalfabetică, cifrul Playfair criptează perechi de\r\nlitere (numite bigrame) și, de aceea, este ceva mai complicat de spart.</p>\r\n<p>La etapa inițială este considerat un tablou bidimensional 5x5, care este completat cu literele unui alfabet mixt, format din literele alfabetului latin, în care o literă cu frecvență de apariție redusă este eliminată (de exemplu, dacă textul clar este în română, este eliminată litera W sau Q, iar dacă textul clar este în engleză – sunt contopite literele I și J). În cazul în care alfabetul textelor clare conține pe lângă literele alfabetului latin și cifrele 0,1,...,9, se va utiliza un tablou 6x6. Alfabetul mixt este generat în baza unui cuvânt cheie din care sunt eliminate literele ce se repetă. Mai întâi urmează cuvântul cheie, apoi celelalte litere ale alfabetului, în ordine alfabetică. Tabloul pentru criptare este completat cu literele alfabetului mixt, acestea fiind scrise de-a lungul unui itinerar fixat (de exemplu, pe orizontală, pe verticală, pe diagonală, în sens orar sau antiorar). Tabloul generat (un pătrat Polybios fără o indexare numerică a liniilor și coloanelor) reprezintă cheia secretă, utilizată atât la criptare, cât și la decriptare.</p>\r\n<h4>Exemplu:</h4>\r\n\t\t<pre>\r\n\t\tCheia este <strong>'monarchy'</strong>\r\n\t\tInseram in tabel litera dupa litera (cu exceptia literei j).\r\n\t\t</pre>\r\n\t\t<p>\r\n\t\t<img src='https://media.geeksforgeeks.org/wp-content/uploads/20190818175423/encryption-keysquare-e1566131203550.png'/>\r\n\t\t</p>\r\n<p>  La etapa a doua, textul clar (în care sunt ignorate spațiile) este divizat în blocuri de câte două caractere, numite bigrame, astfel încât literele fiecărui bigram să fie distincte. Această cerință poate fi satisfăcută simplu, prin modificarea textului clar inițial în modul următor: dacă în bigramul examinat curent coincid literele, atunci între acestea se introduce o literă cu o frecvență de apariție redusă în limba în care este scris textul clar. Astfel, este format un nou bigram ce conține prima literă a bigramului inițial și litera de frecvență redusă, iar a doua literă a bigramului inițial este împerecheată cu următoarea literă a textului clar și se verifică, în continuare, dacă acestea sunt distincte. Dacă ultimul bigram nu este completat (adică avem o singură literă), acesta se completează cu litera de frecvență redusă utilizată.</p>\r\n<h3>Exemplu:</h3>\r\n<pre>\r\n<strong>Textul simplu</strong>: 'instruments'\r\n<strong>După divizare</strong>: 'in' 'st' 'ru' 'me' 'nt' 'sz'\r\n</pre>\r\n<p>În a treia etapă, fiecare bigram obținut este criptat, respectând una din următoarele reguli:</p>\r\n<ul>\r\n<li>\r\n\t<strong>Dacă ambele litere se află în aceeași coloană</strong>: Luați litera de sub fiecare (revenind la partea de sus dacă este în partea de jos).\r\n\t<h4>Exemplu:</h4>\r\n\t\t<pre>\r\n\t\t<strong>Biagramul</strong>: 'me'\r\n\t\t<strong>Textul criptat</strong>: cl\r\n\t\t</pre>\r\n\t\t<p>\r\n\t\t\t<img src='https://media.geeksforgeeks.org/wp-content/uploads/20190818175431/encryption-of-me.png' />\r\n\t\t</p>\r\n</li>\r\n<li>\r\n\t<strong>Dacă ambele litere sunt în același rând</strong>: Luați litera din dreapta fiecăruia (revenind la cea mai stângă dacă se află în poziția cea mai dreaptă).\r\n\t<h4>Exemplu:</h4>\r\n\t<pre>\r\n\t\t<strong>Biagramul</strong>: 'st'\r\n\t\t<strong>Textul criptat</strong>: tl\r\n\t\t</pre>\r\n\t\t<p>\r\n\t\t\t<img src='https://media.geeksforgeeks.org/wp-content/uploads/20190818175435/encryption-of-st.png' />\r\n\t\t</p>\r\n</li>\r\n<li>\r\n\t<strong>Dacă niciuna dintre regulile de mai sus nu este adevărată</strong>: Formați un dreptunghi cu cele două litere și luați literele pe colțul opus orizontal al dreptunghiului.\r\n\t<h4>Exemplu:</h4>\r\n\t<pre>\r\n\t\t<strong>Biagramul</strong>: 'nt'\r\n\t\t<strong>Textul criptat</strong>: rq\r\n\t\t</pre>\r\n\t\t<p>\r\n\t\t\t<img src='https://media.geeksforgeeks.org/wp-content/uploads/20190818175433/encryption-of-nt.png' />\r\n\t\t</p>\r\n</li>\r\n</ul>`\r\n  }\r\n];\r\n\r\n/* https://www.geeksforgeeks.org/playfair-cipher-with-examples/\r\n\r\npre, .mw-code {\r\n    color: #000;\r\n    background-color: #f8f9fa;\r\n    border: 1px solid #eaecf0;\r\n    padding: 1em;\r\n    white-space: pre-wrap;\r\n    overflow-x: hidden;\r\n    word-wrap: break-word;\r\n}\r\n.mw-body-content p {\r\n    margin: 0.5em 0;\r\n}\r\n.mw-body-content h3 {\r\n    font-size: 1.2em;\r\n}\r\n.mw-body-content h2 {\r\n    margin-top: 1em;\r\n    font-size: 1.5em;\r\n}\r\n.mw-body h1, .mw-body-content h1, .mw-body-content h2 {\r\n    margin-bottom: 0.25em;\r\n    padding: 0;\r\n    font-family: 'Linux Libertine','Georgia','Times',serif;\r\n    line-height: 1.3;\r\n}\r\n\r\n*/\r\n","export const EXCLUDED_CHAR = [\" \", \",\", \".\"];\r\n\r\nexport const ALPHABET = \"abcdefghiklmnopqrstuvwxyz\".toUpperCase().split(\"\");\r\n\r\nexport const RARE_CHAR = \"Z\";\r\n// todo RARE_CHAR <- input by user; is used in polialphabetic substitunion\r\n\r\nexport const WIDTH = 5;\r\n\r\n// never used\r\nexport const convertJtoI = str => {\r\n  return [...str].map(char =>\r\n    char === \"J\" || char === \"j\" ? (char = \"I\") : char.toUpperCase()\r\n  );\r\n};\r\n","import { EXCLUDED_CHAR } from \"./globalCFG\";\r\n\r\nexport function myszkowski(text, key) {\r\n  const str_arr = text.split(\"\");\r\n  const clear_str_arr = str_arr.filter(char => !EXCLUDED_CHAR.includes(char));\r\n  const arr = [];\r\n\r\n  const stringLength = clear_str_arr.length;\r\n  const keyWidth = key.length;\r\n\r\n  // Repartition chars into table\r\n  let position = 0;\r\n  for (let j = 0; j < stringLength / keyWidth; j++) {\r\n    arr.push([]);\r\n    for (let i = 0; i < keyWidth; i++) {\r\n      const chr = clear_str_arr[position];\r\n      arr[j].push(chr);\r\n      position++;\r\n      if (position == stringLength) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  //// Read data by column and create a final string\r\n  // Read data by column and create an object ////array sorted correct\r\n  let encryptedArr = [];\r\n  const obj = {};\r\n  for (let j = 0; j < keyWidth; j++) {\r\n    let keyIsRepeated = false;\r\n    const curentKey = key[j];\r\n    if (obj[curentKey] === undefined) {\r\n      obj[curentKey] = [];\r\n    } else {\r\n      keyIsRepeated = true;\r\n    }\r\n    for (let i = 0; i < arr.length; i++) {\r\n      const char = arr[i][j];\r\n      if (char !== undefined) {\r\n        if (keyIsRepeated) {\r\n          const position = i * 2 + 1;\r\n          obj[curentKey].splice(position, 0, char);\r\n        } else {\r\n          obj[curentKey].push(char);\r\n        }\r\n        // encryptedArr.push(char);\r\n        //encryptedStr.concat('', char);\r\n      }\r\n    }\r\n  }\r\n  // Parse created object\r\n  const sortedKeys = Object.keys(obj).sort();\r\n  for (const key of sortedKeys) {\r\n    const chrsForThisKey = obj[key].length;\r\n    for (let i = 0; i < chrsForThisKey; i++) {\r\n      const char = obj[key][i];\r\n      encryptedArr.push(char);\r\n    }\r\n  }\r\n\r\n  const encryptedStr = encryptedArr.join(\"\");\r\n  console.log(obj);\r\n  console.log(encryptedStr);\r\n  return encryptedStr;\r\n}\r\n\r\nexport function myszkowskiDecrypt(text, keyWord) {\r\n  const str_arr = text.split(\"\");\r\n  const arr = [];\r\n\r\n  // Create object\r\n  const sortedKeys = keyWord.split(\"\").sort();\r\n  const uniqueSortedKeys = sortedKeys.filter(function(item, pos) {\r\n    return sortedKeys.indexOf(item) === pos;\r\n  });\r\n\r\n  const undefinedCells = text.length % uniqueSortedKeys.length;\r\n  let rows;\r\n  undefinedCells > 0\r\n    ? (rows = text.length / uniqueSortedKeys.length + 1)\r\n    : (rows = text.length / uniqueSortedKeys.length);\r\n\r\n  const obj = {};\r\n  let position = 0;\r\n  //! uniqueSortedKeys\r\n  for (const key of uniqueSortedKeys) {\r\n    if (obj[key] === undefined) {\r\n      obj[key] = [];\r\n    }\r\n    const howMuchOfMe = sortedKeys.filter(e => e === key).length;\r\n    //const needToDelete = howMuchOfMe;\r\n    // -1 becouse influence on length\r\n    // part created for this code to work correct. Decrypter is wrote bad\r\n    const haveUndefined = keyWord.indexOf(key) + 1 > undefinedCells;\r\n    let howBigIam = howMuchOfMe + rows - 1;\r\n    if (haveUndefined) howBigIam--;\r\n    // const howBigIam = howMuchOfMe * (keyWord.length - howMuchOfMe + 1);\r\n    for (let i = 0; i < howBigIam; i++) {\r\n      if (\r\n        howMuchOfMe === 1 &&\r\n        keyWord.indexOf(key) + 1 > undefinedCells &&\r\n        i + 2 == keyWord.length\r\n      )\r\n        break;\r\n      const chr = str_arr[position];\r\n      obj[key].push(chr);\r\n      position++;\r\n    }\r\n  }\r\n  // console.log(obj);\r\n\r\n  for (const key in obj) {\r\n    if (obj[key].length < rows) {\r\n      arr.push([]);\r\n      obj[key].forEach(e => {\r\n        arr[arr.length - 1].push(e);\r\n      });\r\n    } else {\r\n      const howMuchOfMe = sortedKeys.filter(e => e === key).length;\r\n      const arrOfKey = [];\r\n      for (let i = 0; i < howMuchOfMe; i++) {\r\n        arrOfKey.push([]);\r\n      }\r\n      for (let i = 0; i < obj[key].length; i++) {\r\n        const char = obj[key][i];\r\n        const row = i % howMuchOfMe;\r\n        arrOfKey[row].push(char);\r\n      }\r\n      arr.push(...arrOfKey);\r\n    }\r\n  }\r\n  console.log(arr);\r\n\r\n  // const correctPostitio = keyWord.split('').map((e, i) => {\r\n  // \treturn;\r\n  // });\r\n\r\n  const ascii = [\"T\", \"O\", \"M\", \"A\", \"T\", \"O\"].map(e => e.charCodeAt());\r\n  const asciiFromZero = ascii.map(e => e - 65);\r\n  for (let i = 0; i < asciiFromZero.length; i++) {\r\n    while (asciiFromZero[i] > 0) {\r\n      asciiFromZero[i]--;\r\n    }\r\n\r\n    for (let k = 0; k < i; k++) {\r\n      if (ascii[k] > ascii[i]) asciiFromZero[k]++;\r\n      else asciiFromZero[i]++;\r\n    }\r\n  }\r\n\r\n  // console.log(asciiFromZero);\r\n  // const correctPostitio = [4, 2, 1, 0, 5, 3];\r\n  const correctPostitio = asciiFromZero;\r\n  const correctSortedArr = [];\r\n  for (let j = 0; j < correctPostitio.length; j++) {\r\n    const index = correctPostitio[j];\r\n    const row = arr[index];\r\n    correctSortedArr.push(row);\r\n  }\r\n  console.log(correctSortedArr);\r\n\r\n  const decryptedArr = [];\r\n  for (let j = 0; j < correctSortedArr[0].length; j++) {\r\n    for (let i = 0; i < correctSortedArr.length; i++) {\r\n      const char = correctSortedArr[i][j];\r\n      decryptedArr.push(char);\r\n    }\r\n  }\r\n\r\n  const decryptedStr = decryptedArr.join(\"\");\r\n  console.log(decryptedStr);\r\n  return decryptedStr;\r\n}\r\n\r\nmyszkowskiDecrypt(\r\n  myszkowski(\"WE ARE DISCOVERED. FLEE AT ONCE\", \"TOMATO\"),\r\n  \"TOMATO\"\r\n);\r\n","import { EXCLUDED_CHAR, ALPHABET, WIDTH } from \"./globalCFG\";\r\n\r\nexport const nihilist = (text, key, cipherKey) => {\r\n  (text = text.toUpperCase()),\r\n    (key = key.toUpperCase()),\r\n    (cipherKey = cipherKey.toUpperCase());\r\n  text = text.split(\"\").filter(char => !EXCLUDED_CHAR.includes(char));\r\n\r\n  const arr = [];\r\n\r\n  // Create Tabel based on cipher key\r\n  let position = 0;\r\n  let wasSwitchedToAlphabet = false;\r\n  for (let i = 0; i < WIDTH; i++) {\r\n    arr.push([]);\r\n    for (let j = 0; j < WIDTH; j++) {\r\n      let char;\r\n      if (key[position] !== undefined) {\r\n        char = key[position];\r\n        position++;\r\n      } else if (!wasSwitchedToAlphabet) {\r\n        wasSwitchedToAlphabet = true;\r\n      }\r\n\r\n      if (wasSwitchedToAlphabet) {\r\n        // https://stackoverflow.com/a/14824303\r\n        let oneDarray = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n          oneDarray = oneDarray.concat(arr[i]);\r\n        }\r\n\r\n        char = ALPHABET.filter(e => !oneDarray.includes(e))[0];\r\n      }\r\n      arr[i][j] = char;\r\n    }\r\n  }\r\n\r\n  // Create Tabel that use key\r\n  // const valueArr = key.split('').map(e => e.charCodeAt(0));\r\n  const firstValueEncryptedArr = [];\r\n  for (let k = 0; k < text.length; k++) {\r\n    const toFind = text[k];\r\n\r\n    for (let i = 0; i < WIDTH; i++) {\r\n      for (let j = 0; j < key.length; j++) {\r\n        const char = arr[i][j];\r\n        if (char === toFind) {\r\n          firstValueEncryptedArr.push(i * 10 + j + 11);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Create Tabel of value for cipher key\r\n  // const valuesChipherKey = [21, 22, 11, 54];\r\n  const valuesChipherKey = [];\r\n  for (let k = 0; k < cipherKey.length; k++) {\r\n    const toFind = cipherKey[k];\r\n\r\n    for (let i = 0; i < WIDTH; i++) {\r\n      for (let j = 0; j < key.length; j++) {\r\n        const char = arr[i][j];\r\n        if (char === toFind) {\r\n          valuesChipherKey.push(i * 10 + j + 11);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //console.log(valuesChipherKey);\r\n\r\n  // Continue encripting\r\n  const secondValueEncryptedArr = [];\r\n  for (let k = 0; k < text.length; k++) {\r\n    const number =\r\n      firstValueEncryptedArr[k] + valuesChipherKey[k % valuesChipherKey.length];\r\n    secondValueEncryptedArr.push(number);\r\n  }\r\n\r\n  // console.log(arr);\r\n  // console.log(firstValueEncryptedArr);\r\n  // console.log(secondValueEncryptedArr);\r\n  // console.log('Final: ', ...secondValueEncryptedArr);\r\n  return secondValueEncryptedArr;\r\n};\r\n\r\nnihilist(\"the early bird\", \"SIMPLE\", \"EASY\");\r\n\r\nexport const nihilistDecrypt = (array, key, cipherKey) => {\r\n  (key = key.toUpperCase()), (cipherKey = cipherKey.toUpperCase());\r\n\r\n  const arr = [];\r\n\r\n  // Create Tabel based on cipher key\r\n  let position = 0;\r\n  let wasSwitchedToAlphabet = false;\r\n  for (let i = 0; i < WIDTH; i++) {\r\n    arr.push([]);\r\n    for (let j = 0; j < WIDTH; j++) {\r\n      let char;\r\n      if (key[position] !== undefined) {\r\n        char = key[position];\r\n        position++;\r\n      } else if (!wasSwitchedToAlphabet) {\r\n        wasSwitchedToAlphabet = true;\r\n      }\r\n\r\n      if (wasSwitchedToAlphabet) {\r\n        // https://stackoverflow.com/a/14824303\r\n        let oneDarray = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n          oneDarray = oneDarray.concat(arr[i]);\r\n        }\r\n\r\n        char = ALPHABET.filter(e => !oneDarray.includes(e))[0];\r\n      }\r\n      arr[i][j] = char;\r\n    }\r\n  }\r\n  // Create Tabel of value for cipher key\r\n  // const valuesChipherKey = [21, 22, 11, 54];\r\n  const valuesChipherKey = [];\r\n  for (let k = 0; k < cipherKey.length; k++) {\r\n    const toFind = cipherKey[k];\r\n    // console.log(toFind);\r\n\r\n    for (let i = 0; i < WIDTH; i++) {\r\n      for (let j = 0; j < key.length; j++) {\r\n        const char = arr[i][j];\r\n        if (char === toFind) {\r\n          valuesChipherKey.push(i * 10 + j + 11);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // console.log(valuesChipherKey);\r\n\r\n  // Normalize\r\n  const secondValueEncryptedArr = [];\r\n  for (let k = 0; k < array.length; k++) {\r\n    const number = array[k] - valuesChipherKey[k % valuesChipherKey.length];\r\n    secondValueEncryptedArr.push(number);\r\n  }\r\n  // console.log(secondValueEncryptedArr);\r\n\r\n  // Parse Tabel base on key\r\n  const firstValueDecryptedArr = [];\r\n  for (let k = 0; k < secondValueEncryptedArr.length; k++) {\r\n    const i = Number.parseInt((secondValueEncryptedArr[k] - 1) / 10);\r\n    const j = (secondValueEncryptedArr[k] - 1) % 10;\r\n    firstValueDecryptedArr.push(arr[(i - 1) % WIDTH][j % WIDTH]);\r\n  }\r\n\r\n  // console.log(firstValueDecryptedArr);\r\n  // console.log(arr);\r\n  return firstValueDecryptedArr.join(\"\");\r\n};\r\n\r\nnihilistDecrypt(nihilist(\"the early bird\", \"SIMPLE\", \"EASY\"), \"SIMPLE\", \"EASY\");\r\n","import { EXCLUDED_CHAR, RARE_CHAR, ALPHABET, WIDTH } from \"./globalCFG\";\r\n\r\nexport const playfair = (text, key) => {\r\n  (text = text.toUpperCase()), (key = key.toUpperCase());\r\n  text = text.split(\"\").filter(char => !EXCLUDED_CHAR.includes(char));\r\n\r\n  const arr = [];\r\n  // Create Tabel based on cipher key\r\n  let position = 0;\r\n  let wasSwitchedToAlphabet = false;\r\n  for (let i = 0; i < WIDTH; i++) {\r\n    arr.push([]);\r\n    for (let j = 0; j < WIDTH; j++) {\r\n      let char;\r\n      if (key[position] !== undefined) {\r\n        char = key[position];\r\n        position++;\r\n      } else if (!wasSwitchedToAlphabet) {\r\n        wasSwitchedToAlphabet = true;\r\n      }\r\n\r\n      if (wasSwitchedToAlphabet) {\r\n        // https://stackoverflow.com/a/14824303\r\n        let oneDarray = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n          oneDarray = oneDarray.concat(arr[i]);\r\n        }\r\n\r\n        char = ALPHABET.filter(e => !oneDarray.includes(e))[0];\r\n      }\r\n      arr[i][j] = char;\r\n    }\r\n  }\r\n\r\n  // Trebuie de creat un tabel ce contine cupluri de litere\r\n  // in caz ca ele se aseamana, intre ele se introduce litera X (ex.)\r\n  const arrOfCouple = [];\r\n  for (let i = 0; i < text.length; i += 2) {\r\n    const char1 = text[i];\r\n    let char2 = text[i + 1];\r\n    if (char1 === char2 || char2 === undefined) {\r\n      char2 = RARE_CHAR;\r\n      i -= 1;\r\n    }\r\n    arrOfCouple.push([char1, char2]);\r\n  }\r\n\r\n  // Find in table\r\n  // Case analysis\r\n  const valueEncryptedArr = [];\r\n  for (let k = 0; k < arrOfCouple.length; k++) {\r\n    const toFind0 = arrOfCouple[k][0];\r\n    const toFind1 = arrOfCouple[k][1];\r\n\r\n    const xy0 = [],\r\n      xy1 = [];\r\n    for (let i = 0; i < WIDTH; i++) {\r\n      for (let j = 0; j < WIDTH; j++) {\r\n        const char = arr[i][j];\r\n        if (char === toFind0 && xy0.length === 0) {\r\n          xy0.push(i, j);\r\n        } else if (char === toFind1 && xy1.length === 0) {\r\n          xy1.push(i, j);\r\n        } else if (xy0.length === 1 && xy1.length === 1) {\r\n          break;\r\n          // poate fi scris ca if separat, dar se va executa de mai multe ori\r\n        }\r\n      }\r\n    }\r\n\r\n    const inSameColumn = xy0[1] === xy1[1];\r\n    const inSameRow = xy0[0] === xy1[0];\r\n    if (inSameColumn) {\r\n      // console.log('In same column: ', toFind0, toFind1);\r\n      // Recalculation\r\n      let recalY0 = xy0[0] + 1;\r\n      let recalY1 = xy1[0] + 1;\r\n      if (recalY0 == WIDTH) {\r\n        recalY0 = 0;\r\n      } else if (recalY1 == WIDTH) {\r\n        recalY1 = 0;\r\n      }\r\n\r\n      // Apply\r\n      const newChar0 = arr[recalY0][xy0[1]];\r\n      const newChar1 = arr[recalY1][xy1[1]];\r\n      valueEncryptedArr.push([newChar0, newChar1]);\r\n    } else if (inSameRow) {\r\n      // console.log('In same row: ', toFind0, toFind1);\r\n      // Recalculation\r\n      let recalX0 = xy0[1] + 1;\r\n      let recalX1 = xy1[1] + 1;\r\n      if (recalX0 == WIDTH) {\r\n        recalX0 = 0;\r\n      } else if (recalX1 == WIDTH) {\r\n        recalX1 = 0;\r\n      }\r\n\r\n      // Apply\r\n      const newChar0 = arr[xy0[0]][recalX0];\r\n      const newChar1 = arr[xy1[0]][recalX1];\r\n      valueEncryptedArr.push([newChar0, newChar1]);\r\n    } else {\r\n      // console.log('Else: ', toFind0, toFind1);\r\n\r\n      // Apply\r\n      const newChar0 = arr[xy0[0]][xy1[1]];\r\n      const newChar1 = arr[xy1[0]][xy0[1]];\r\n      valueEncryptedArr.push([newChar0, newChar1]);\r\n    }\r\n  }\r\n\r\n  const beautifyArr = [];\r\n  for (let i = 0; i < valueEncryptedArr.length; i++) {\r\n    beautifyArr.push(...valueEncryptedArr[i]);\r\n  }\r\n  console.log(beautifyArr);\r\n  return beautifyArr.join(\"\");\r\n};\r\n\r\nplayfair(\"instruments\", \"monarchy\");\r\n// playfair('clocks will run more quickly during free time', 'MURPHY');\r\n\r\nexport const playfairDecrypt = (text, key) => {\r\n  (text = text.toUpperCase()), (key = key.toUpperCase());\r\n  text = text.split(\"\").filter(char => !EXCLUDED_CHAR.includes(char));\r\n\r\n  const arr = [];\r\n\r\n  // Create Tabel based on cipher key\r\n  let position = 0;\r\n  let wasSwitchedToAlphabet = false;\r\n  for (let i = 0; i < WIDTH; i++) {\r\n    arr.push([]);\r\n    for (let j = 0; j < WIDTH; j++) {\r\n      let char;\r\n      if (key[position] !== undefined) {\r\n        char = key[position];\r\n        position++;\r\n      } else if (!wasSwitchedToAlphabet) {\r\n        wasSwitchedToAlphabet = true;\r\n      }\r\n\r\n      if (wasSwitchedToAlphabet) {\r\n        // https://stackoverflow.com/a/14824303\r\n        let oneDarray = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n          oneDarray = oneDarray.concat(arr[i]);\r\n        }\r\n\r\n        char = ALPHABET.filter(e => !oneDarray.includes(e))[0];\r\n      }\r\n      arr[i][j] = char;\r\n    }\r\n  }\r\n\r\n  // Trebuie de creat un tabel ce contine cupluri de litere\r\n  // in caz ca ele se aseamana, intre ele se introduce litera X (ex.)\r\n  const arrOfCouple = [];\r\n  for (let i = 0; i < text.length; i += 2) {\r\n    const char1 = text[i];\r\n    let char2 = text[i + 1];\r\n    if (char1 === char2 || char2 === undefined) {\r\n      char2 = RARE_CHAR;\r\n      i -= 1;\r\n    }\r\n    arrOfCouple.push([char1, char2]);\r\n  }\r\n\r\n  // Find in table\r\n  // Case analysis\r\n  const valueEncryptedArr = [];\r\n  for (let k = 0; k < arrOfCouple.length; k++) {\r\n    const toFind0 = arrOfCouple[k][0];\r\n    const toFind1 = arrOfCouple[k][1];\r\n\r\n    const xy0 = [],\r\n      xy1 = [];\r\n    for (let i = 0; i < WIDTH; i++) {\r\n      for (let j = 0; j < WIDTH; j++) {\r\n        const char = arr[i][j];\r\n        if (char === toFind0 && xy0.length === 0) {\r\n          xy0.push(i, j);\r\n        } else if (char === toFind1 && xy1.length === 0) {\r\n          xy1.push(i, j);\r\n        } else if (xy0.length === 1 && xy1.length === 1) {\r\n          break;\r\n          // poate fi scris ca if separat, dar se va executa de mai multe ori\r\n        }\r\n      }\r\n    }\r\n\r\n    const inSameColumn = xy0[1] === xy1[1];\r\n    const inSameRow = xy0[0] === xy1[0];\r\n    if (inSameColumn) {\r\n      // Recalculation\r\n      let recalY0 = xy0[0] - 1;\r\n      let recalY1 = xy1[0] - 1;\r\n      if (recalY0 == WIDTH) {\r\n        recalY0 = WIDTH - 1;\r\n      } else if (recalY1 == WIDTH) {\r\n        recalY1 = WIDTH - 1;\r\n      }\r\n\r\n      // Apply\r\n      const newChar0 = arr[recalY0][xy0[1]];\r\n      const newChar1 = arr[recalY1][xy1[1]];\r\n      valueEncryptedArr.push([newChar0, newChar1]);\r\n    } else if (inSameRow) {\r\n      // Recalculation\r\n      let recalX0 = xy0[1] - 1;\r\n      let recalX1 = xy1[1] - 1;\r\n      if (recalX0 === -1) {\r\n        recalX0 = WIDTH - 1;\r\n      } else if (recalX1 === -1) {\r\n        recalX1 = WIDTH - 1;\r\n      }\r\n\r\n      // Apply\r\n      const newChar0 = arr[xy0[0]][recalX0];\r\n      const newChar1 = arr[xy1[0]][recalX1];\r\n      valueEncryptedArr.push([newChar0, newChar1]);\r\n    } else {\r\n      // Apply\r\n      const newChar0 = arr[xy0[0]][xy1[1]];\r\n      const newChar1 = arr[xy1[0]][xy0[1]];\r\n      valueEncryptedArr.push([newChar0, newChar1]);\r\n    }\r\n  }\r\n  //debugger;\r\n\r\n  const beautifyArr = [];\r\n  for (let i = 0; i < valueEncryptedArr.length; i++) {\r\n    beautifyArr.push(...valueEncryptedArr[i]);\r\n  }\r\n  console.log(beautifyArr);\r\n  return beautifyArr.join(\"\");\r\n};\r\n\r\nplayfairDecrypt(playfair(\"instruments\", \"monarchy\"), \"monarchy\");\r\n","import { render } from \"./App.vue?vue&type=template&id=3ed54742\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3ed54742&lang=css\"\nimport \"./main.css?vue&type=style&index=1&lang=css\"\nimport \"./popup.css?vue&type=style&index=2&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!./main.css?vue&type=style&index=1&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=3ed54742&lang=css\""],"sourceRoot":""}